CREATE OR REPLACE TRIGGER FonePessoaFK
  BEFORE INSERT ON FONE_PESSOA
  FOR EACH ROW
DECLARE
  value PESSOA.CPF%TYPE;
BEGIN
  SELECT CPF INTO value 
  FROM PESSOA
  WHERE CPF NOT IN (
    SELECT CPF 
    FROM FONE_PESSOA
  ) AND ROWNUM = 1;
  :NEW.CPF := value;
END;
/

CREATE OR REPLACE TRIGGER EmailPessoaFK 
  BEFORE INSERT ON EMAIL_PESSOA
  FOR EACH ROW
DECLARE
  value PESSOA.CPF%TYPE;
BEGIN
  SELECT CPF INTO value 
  FROM PESSOA
  WHERE CPF NOT IN (
    SELECT CPF 
    FROM EMAIL_PESSOA
  ) AND ROWNUM = 1;
  :NEW.CPF := value;
END;
/

CREATE OR REPLACE TRIGGER FoneClinicaFK
  BEFORE INSERT ON FONE_CLINICA
  FOR EACH ROW
DECLARE
  value CLINICA.CPF%TYPE;
BEGIN
  SELECT CPF INTO value 
  FROM CLINICA
  WHERE CPF NOT IN (
    SELECT CPF 
    FROM FONE_CLINICA
  ) AND ROWNUM = 1;
  :NEW.CPF := value;
END;
/

CREATE OR REPLACE PROCEDURER FillTernary
DECLARE
  clinica CLINICA.ID_CLINICA%TYPE;
  terceirizado EMPRESA_TERCEIRIZADA.CNPJ%TYPE;
  contrato CONTRATO.COD%TYPE; 
  contagem INT;
BEGIN
  -- Verify how many inserts to do:

  SELECT COUNT(*) INTO contagem FROM CLINICA, CONTRATO, EMPRESA_TERCEIRIZADA;

  FOR i IN 1..contagem LOOP
    SELECT ID_CLINICA INTO clinica FROM
      ( SELECT ID_CLINICA FROM CLINICA
      ORDER BY dbms_random.value )
      WHERE rownum = 1

    SELECT CNPJ INTO terceirizado FROM
      ( SELECT CNPJ FROM EMPRESA_TERCEIRIZADA
      ORDER BY dbms_random.value )
      WHERE rownum = 1

    SELECT COD INTO contrato FROM
      ( SELECT COD FROM CONTRATO
      ORDER BY dbms_random.value )
      WHERE rownum = 1

    INSERT INTO SERVICO (ID_SERVICO, CNPJ, COD) 
      VALUES (clinica, terceirizado, contrato)
  END LOOP

END;
/